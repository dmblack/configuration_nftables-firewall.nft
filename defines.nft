# Interfaces
define nic_inet_bluetooth = bnep0
define nic_inet_lan = enp2s0f0
define nic_inet_usbeth = eth0
define nic_inet_vpn = ppp0

# Common
define nic_inet_lo = lo

# Networks
define trusted_interfaces = $nic_inet_lo
define trusted_interfaces_named = $nic_inet_vpn
define untrusted_interfaces = $nic_inet_lan
define untrusted_interfaces_named = { $nic_inet_bluetooth , $nic_inet_usbeth }
define global_interfaces = { $trusted_interfaces , $untrusted_interfaces }
define global_interfaces_named = { $trusted_interfaces_named , $nic_inet_bluetooth , $nic_inet_usbeth }

# Dictionaries
map trusted_services_tcp_in { type inet_service . inet_proto : verdict; }
map trusted_services_udp_in { type inet_service . inet_proto : verdict; }
map untrusted_services_tcp_in { type inet_service . inet_proto : verdict; }
map untrusted_services_udp_in { type inet_service . inet_proto : verdict; }
map trusted_services_tcp_out { type inet_service . inet_proto : verdict; }
map trusted_services_udp_out { type inet_service . inet_proto : verdict; }
map untrusted_services_tcp_out { type inet_service . inet_proto : verdict; }
map untrusted_services_udp_out { type inet_service . inet_proto : verdict; }
map global_services_tcp_in { type inet_service . inet_proto : verdict; }
map global_services_tcp_out { type inet_service . inet_proto : verdict; }
map global_services_udp_in { type inet_service . inet_proto : verdict; }
map global_services_udp_out { type inet_service . inet_proto : verdict; }

# States
# Note: invalid is part of global block, hence not mentioned here.
define trusted_states_in = { established , new , related }
define trusted_states_out = { established , new , related }

define untrusted_states_in = { established , related }
define untrusted_states_out = { established , related }

define global_state_block = invalid
