# Prefixed with dt_ to avoid collision with other defines.

# Interfaces
# Requires MANUAL Input
# I include my VPN here, as it's a secure network. However;
#   NFTables doesn't seem to support dynamic interfaces. So if this interface is not available,
#     the script will throw an error. If the interface was available, but is no longer available,
#     it will be refered to by it's 'interface' number (an allocated integer, and no longer ppp0).
#   So.. for now.. I manually toggle between these two defines when I'm on VPN or not - but default to no ppp0
define dt_interfaces = { lo }
#define dt_interfaces = { lo, ppp0 }

# Services
# - TCP

define dt_trusted_service_tcp_sspd = 1900
add element filter trusted_services_tcp_in { $dt_trusted_service_tcp_sspd . tcp : accept }

# - UDP

# - - NTP
define dt_trusted_service_udp_ntp = 123
add element filter trusted_services_udp_out { $dt_trusted_service_udp_ntp . udp : accept }

define dt_trusted_service_udp_nebios137 = 137
add element filter trusted_services_udp_in { $dt_trusted_service_udp_nebios137 . udp : accept }

define dt_trusted_service_udp_nebios138 = 138
add element filter trusted_services_udp_in { $dt_trusted_service_udp_nebios138 . udp : accept }

# Separated from the above domain item due to it's multicast status
#   SEE: https://en.wikipedia.org/wiki/Multicast_DNS
#   Should only be accepted only
#     DPORT = 5353
#     DADDR = 224.0.0.251 (FF02:FB IPv6)
#     PROTO = UDP
#     DMAC = 01:00:5E:00:00:FB (33:33:00:00:00:FB IPv6)
# Additionally: Should only be accepted on TRUSTED interfaces & networks.
define dt_trusted_service_udp_mdns = 5353
add element filter trusted_services_udp_in { $dt_trusted_service_udp_mdns . udp : accept }

define dt_trusted_service_udp_sspd = 1900
add element filter trusted_services_udp_in { $dt_trusted_service_udp_sspd . udp : accept }
